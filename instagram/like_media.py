import time
import random

from instagram.bd import write_is_like_to_db, write_is_like_success_to_db
from login import set_login
from config import TARGET_USERNAMES, SLEEP_BETWEEN, SESSION_FILE
from config import log
from instagrapi import Client
from bd import read_to_like_from_bd
from typing import List, Tuple


def like_latest_media_of(username: str, cl: Client) -> bool:
    """
    –°—Ç–∞–≤–∏—Ç –ª–∞–π–∫ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –º–µ–¥–∏–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è username.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –ø—Ä–∏ —É—Å–ø–µ—Ö–µ, False –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ –∏–ª–∏ –µ—Å–ª–∏ –Ω–µ—Ç –º–µ–¥–∏–∞.
    """
    time.sleep(20)
    log.info("Processing user: %s", username)
    try:
        user = cl.user_info_by_username(username)
        print(f"–Æ–∑–µ—Ä - {user}")
    except Exception as e:
        log.error("Failed to get user info for %s: %s", username, e)
        return False

    data = cl.private_request(f"feed/user/{user.pk}/", params={"count": 1})
    items = data.get("items", [])
    print(items)

    if items:
        media_id = items[0]["id"]  # —Ç—É—Ç —Å—Ä–∞–∑—É –Ω—É–∂–Ω—ã–π id
        cl.media_like(media_id)
        print("–ü–æ—Å—Ç–∞–≤–∏–ª –ª–∞–π–∫ üëç")
        return True
    else:
        print("–ù–µ—Ç –ø–æ—Å—Ç–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        return False


def put_comment(username: str, cl: Client):
    """–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π"""
    text_comment = "–ü—Ä–∏–∫–æ–ª!"
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = cl.user_info_by_username(username)

    # –ó–∞–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ private_request
    data = cl.private_request(f"feed/user/{user.pk}/", params={"count": 1})
    items = data.get("items", [])
    print(items)
    if items:
        media_id = items[0]["id"]  # ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞
        cl.media_comment(media_id, text_comment)
        print(f"‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π '{text_comment}' –æ—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–¥ –ø–æ—Å–ª–µ–¥–Ω–∏–º –ø–æ—Å—Ç–æ–º {username}")
    else:
        print(f"‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username} –Ω–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–π")


def main():
    count = 0
    cl = set_login()  # –ó–∞–ª–æ–≥–∏–Ω–∏–≤–∞–µ–º—Å—è
    target_usernames = read_to_like_from_bd(25)
    success_usernames = []
    print(target_usernames)

    for username in target_usernames:
        try:
            success = like_latest_media_of(username, cl)
            if success:
                count += 1
                success_usernames.append(username)
        except Exception as e:
            print(f"–æ—à–∏–±–∫–∞ - {e}")
            continue
        # success= put_comment(username, cl)
        # –Ω–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, —á—Ç–æ–±—ã –Ω–µ –≤—ã–≥–ª—è–¥–µ—Ç—å —Ä–æ–±–æ—Ç–æ–º
        time.sleep(random.randint(SLEEP_BETWEEN, SLEEP_BETWEEN * 2))
    print(f"–ü–æ—Å—Ç–∞–≤–ª–µ–Ω–æ {count} –ª–∞–π–∫–æ—Å–æ–≤")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ–º—É –ø—ã—Ç–∞–ª–∏—Å—å —Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫ –Ω–∞ –ø–æ—Å—Ç
    write_is_like_to_db([(st,) for st in target_usernames])

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ–º—É —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–∏–ª—Å—è –ª–∞–π–∫ –Ω–∞ –ø–æ—Å—Ç
    write_is_like_success_to_db([(st,) for st in success_usernames])

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
    try:
        cl.dump_settings(SESSION_FILE)
        log.info("Session saved.")
    except Exception as e:
        log.warning(f"Failed to dump session: {e}")


if __name__ == "__main__":
    main()
